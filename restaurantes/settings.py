"""
Django settings for restaurantes project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""


import os
from urllib.parse import urlparse
# Host de backend
SERVER_HOST = os.getenv("SERVER_HOST", "http://192.168.100.230:8000")

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$=x_5u9g60tv#&fnprk)4w9o2w)#zvrrbpka%9=p!h2n&%)yd0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Extraer solo host sin esquema ni puerto
parsed_url = urlparse(SERVER_HOST)
ALLOWED_HOSTS = [parsed_url.hostname, "127.0.0.1", "localhost"]

DEFAULT_PERMISSION_CLASSES = [
    'rest_framework.permissions.IsAuthenticated',
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.sites',  # obligatorio para allauth
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.admin',
    'reservas',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'usuarios',
    # Allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',  # para login con sesiÃ³n (cookies)
        # 'rest_framework.authentication.TokenAuthentication',  
        'rest_framework.authentication.BasicAuthentication'  # para login con token (header Authorization: Token)
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}


# Permite login estÃ¡ndar y login con proveedores sociales (Google, etc.)
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',              # login normal con username/password
    'allauth.account.auth_backends.AuthenticationBackend',    # login con social providers
]

# Redirecciones despues de login/logout
LOGIN_REDIRECT_URL = '/'       # pagina a la que redirige despues de iniciar sesion
LOGOUT_REDIRECT_URL = '/'      # pagina a la que redirige al cerrar sesion

# Para que los formularios de allauth usen email como username opcional
ACCOUNT_LOGIN_METHODS = {'username', 'email'}
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': "1051641894738-r45og5d99a3iod757dd99b121309ou7j.apps.googleusercontent.com",
            'secret': "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",  # ðŸ‘ˆ el secreto de Google Cloud
            'key': ""
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
            'prompt': 'select_account',
        }
    }
}

# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'APP': {
#             'client_id': "1051641894738-r45og5d99a3iod757dd99b121309ou7j.apps.googleusercontent.com",
#             'secret': "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",  # ðŸ‘ˆ el secreto de Google Cloud
#             'key': ""
#         },
#         'SCOPE': [
#             'profile',
#             'email',
#         ],
#         'AUTH_PARAMS': {
#             'access_type': 'online',
#             'prompt': 'select_account',
#         }
#     }
# }



# Indica el sitio actual (obligatorio para allauth)
SITE_ID = 1

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",             # Cors debe ir al inicio SIEMPRE
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'allauth.account.middleware.AccountMiddleware',      # obligatorio para allauth
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ALLOW_CREDENTIALS = True 


CORS_ALLOW_ALL_ORIGINS = True # Permitir todas las conexiones (solo para desarrollo)

CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:5500",
    "http://localhost:5500",
    "http://192.168.100.230:5500",  # IP + puerto desde donde abre Live Server
]


ROOT_URLCONF = 'restaurantes.urls'

AUTH_USER_MODEL = 'usuarios.Usuario' #modelo principal de usuarios
SOCIALACCOUNT_LOGIN_ON_GET = True
LOGIN_REDIRECT_URL = "/usuarios/completar-datos/"


STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],  # apunta a su carpeta templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                # 'reservas.context_processors.user_context',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]



WSGI_APPLICATION = 'restaurantes.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

